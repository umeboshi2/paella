{"content": "# [Paella](#)\n\n## Introduction \n\nPaella is a system for automatically installing fully configured \n[debian](https://debian.org) machines on a local network, and managing \ntheir configuration.  Paella combines PXE booting, preseeded base debian \ninstalls, and [salt](https://saltstack.com) to install a fully configured \nsystem and maintain the configuration.  Paella can also automatically install\n[Microsoft Windows](https://microsoft.com) systems, however this\nis currently a feature that needs much work.\n\nPaella requires quite a few things in order to operate.  The best way to \nget things started is to use [Virtual Box](https://virtualbox.org) and \n[Vagrant](https://vagrantup.com) to install and configure the Paella \nserver.  The complexity of installing and configuring the network \nservices, creating the debian repositories, creating and installing \nthe default live system, is handled by provisioning the vagrant virtual \nmachine with salt.  Instructions for using vagrant to setup paella are \n[here](#pages/vagrant).\n\n## That was then, this is now\n\nPaella is not a new project.  It has been rewritten entirely from scratch.\nYou are looking at what could best be called version 2.  A brief overview\nof version 1, and the inspiration for paella and some of what it did is on\nthe [\"history page\"](#page/history).\n\nConfiguration management never made it past install.  Using paella (v1)\nto keep and maintain a configuration would require some sort of state\nmanagement that was more easily presumed with a fresh install, than\ncould be easily done after deployment.  This required to much time and\nattention in the past when good configuration management systems were\nfew and far between.  My dislike for [PERL](http://perl.com) kept me from\ncontributing to [FAI](https://fai-project.org) as well as using cfengine.\nI briefly looked into using bcfg2, but couldn't quite get it working\nto my satisfaction.\n\nAt sometime, when paella v1 was showing its age,\n[puppet](https://puppetlabs.com) was\nbecoming quite popular.  Puppet became popular enough to seem to inspire\nother configuration management systems.  This lead me to look again for another\nconfiguration management system that was based upon python.  There were a\nfew systems to choose from, but the choice was between\n[ansible](https://ansible.com) and [salt](https://saltstack.com).  I wound\nup using salt, primarily for the use of [zeromq](https://zeromq.org) for\ncommunication.\n\n## Paella and FAI\n\nPaella was originally inspired by [FAI](https://fai-project.org), and in fact,\nthe earliest incarnation was a set of python scripts that communicated with\na [postgresql](https://postgresql.org) database.  Much of the manner in\nwhich paella operated was in many ways similar to FAI, especially the ability to\nhook into and modify each part of the installation process.  Up until the present\nrewrite, paella depended upon \n[fai-setup-storage](https://packages.debian.org/unstable/main/fai-setup-storage),\nwhich was thoughtfully split from the other FAI packages, as it proves to be\nvery useful.  There exists a possibility that fai-setup-storage may be included\nalong with febootstrap to automatically install rpm type systems.\n\nUnlike, FAI, paella is no longer using the [debian-live](https://live.debian.net/)\nto install the debian systems.  Instead, the\n[debian installer](https://www.debian.org/devel/debian-installer/) is being\nused to install the base system and prepare it to be configured with salt on the\nnext reboot.\n\n\n\n\n\n\n\n\n", "id": "intro"}