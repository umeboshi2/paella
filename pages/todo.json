{"content": "# [Paella](#)\n\n## TODO\n\n- Setup scripts to help with partial repository STARTED\n\n- Move more info into pillar data\n\n  - wipe out all hardcoded entries of '10.0.4.1' to config files or pillar data\n\n- Create some simple disk/partition recipes to use as a starting \n  point.(STARTED)\n  - a couple of recipes have been created.\n  - find place in repos to place recipes for db init\n\n- test raid recipes and determine if disklist is needed in database\n  - can we presume disklist on null entry in db?\n\n- Automate key generation and preseed the keys during first stage \n  install.\n  http://docs.saltstack.com/en/latest/topics/tutorials/preseed_key.html\n  - pyramid_celery and rabbitmq to help queue key generation jobs\n  - keys are instaled in configure netboot script\n  - need to enforce ssl on apache to pass data across network\n  - **update**\n\t- some work has been done of generating keys\n\n- work on web interface\n  - basic recipe management is possibly complete\n  - edit state files with ace editor\n\n- need late command to remove pxeconfig during windows installs\n\n- need to respect arch decision when installing ostype mswindows\n\n- work on deployment plan\n\n- Implement per machine auto install option when generating install pxe \n  config file.\n\n- Start preparing to handle both amd64 and i386. (STARTED)\n\n\t- DONE: make sure debian installs work on both archs\n\t\n\t- make sure that mswindows ostype installs with live system (STARTED)\n\t\n\n- Handle different operating system releases\n\n\t- test using debian jessie pxe boot\n\t\n\t- windows is left as local exercise due to availability of content\n\t\n\n- Decide how to handle newer UEFI systems.\n\n- DONE: Make scripts for live netboot system to identify machines and set\n  for install.\n  \n- DONE: Make server that accepts POST requests and assigns machine names \n  to mac addresses.\n  \n- DONE: Get server to render preseed files based on name of machine.\n\n- DONE: Get server to create and destroy pxe config files for machines in \n  /var/lib/tftpboot.\n\n- DONE: use system uuid instead of mac addresses: dmidecode -s system-uuid\n\n- Work on [deployment](#pages/deployment) notes.\n\n- Use debian live system to install custom wim image and prepare boot.\n\n- Look at using streamable WIM's using wimlib.  Serve WIM based on \n  uuid.  Serve unattend.xml based on uuid.\n  \n- Make image capture and submission scripts. Should WIM's get their \n  own database table?\n\n", "id": "todo"}