{"content": "# [Paella](#)\n\n#### Default Live System\n\nBoot a machine over the network.  The default boot menu will allow you to \nboot into a live system where you can identify the machine and set a flag \non the server to install the machine.\n\nTwo scripts on the live system:\n\n1. paella-submit-machine <name>\n   \n   1. sends a name to the server\n   \n\t   - actually sends json.dumps(\n\t\t dict(action='submit', machine=name, addresses=[a1, a2]))\n\t\t in a POST request to http://host/paella/machines\n   \n   2. the salt config should already have this name\n   \n   3. all mac addresses sent to server and tied to name\n   \n\n2. install-machine\n   \n   1. machine must already be submitted by script above\n   \n   2. name lookup based on matching mac address\n   \n   3. the script gets addresses on local machine then checks \n   http://host/paella/addresses/{address} for a machine name, \n   accepting the first match.\n\t\t \n   4. after a successful match, the retrieved machine name is sent \n   in a POST request dict(action='install', machine=name) to\n   http;//host/paella/machines .\n   \n   5. The request above tells the server to create special pxe config \n   files named after the mac addresses linked to the machine in the \n   database.\n   \n   6. The distinctive feature of the specific pxe config file for the\n   mac address of the target machine is that appends a preseed \n   url to the kernel command line specific to the machine.\n   \n\t   - http://host/paella/preseed/{machine}\n\t   \n   7. It is the preseed file's duty to make sure salt-minion is installed,\n   and the machine identified for the minion to work.  This is currently being \n   done using hostname.\n\n", "id": "live-system"}