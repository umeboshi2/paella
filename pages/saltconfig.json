{"content": "# Vagrant Salt Configuration\n\n## What Vagrant Does\n\nPaella starts by installing some basic packages that are either necessary\nor useful.  Development packages and tools are necessary for preparing\npaella to perform network intalls.\n\n\n\n\nShorewall\n--------------\n\nThis is the firewall for paella.  In the vagrant development environment,\nthis state could very easily be replaced by a short iptables script\nthat performs the NAT. However, shorewall is a really good application\nand the state helps serve to prepare other machines that will be using\nshorewall.\n\nDHCP and DNSServer\n---------------------\n\nOne of the most difficult things to configure is the dhcp server.  In order to\nsupport the various possibilities of pxe clients, as well as serve a\nbootloader that is capable of retrieving images via http, the dhcpd\nconfiguration can become quite involved, especially when\nchainloading different bootfiles based upon client capabilities.  I\nam attempting a generic configuration that will hopefully serve the proper\nboot files regardless of pxe client, but it may be required for the system\nadministrator to reconfigure dhcpd to match their machines more closely.\n\nThe DNS is configured to respond the the hostname paella.  Dynamic updates\nare also configured on DNS to allow for the minions to log to paella, but\nthis isn't fully implemented.\n\n\nSamba (Optional)\n-----------------------\n\nSamba needs to be prepared in order to be able to install Microsoft Windows\nsystems.\n\nThe samba state, or configuration in salt for vagrant, can take quite a while\nto execute.  The state is responsible for making sure that the files that\nwill be served through samba exist on the system, or otherwise retrieve\nthem from the internet.  The bulk of what is retrieved are two\nwindows 7 iso files from the Digital River site, as well as the\nWindows Automatic Installation Kit iso available from Microsoft.  These\niso files can take extensive time to download.  There are also other\nfiles and small utilities that are good to install on a windows\nsystem that are included.  The files that are necessary to build the\nsalt-minion on windows, as well at the build dependencies are also\ninstalled here.\n\nAfter the iso files are downloaded, they are mounted loopback and served\nthrough samba.\n\nPostgreSQL\n---------------------\n\nThis is the database that paella uses.\n\nDebrepos\n----------------\n\nThis state prepares the local partial debian and security repository,\nthe partial salt repository and a paella repository for locally built\npackages.  This is the local debian mirror that everything is installed\nfrom.  The desire is to have paella capable of fully automated installs\non a network that is disconnected from the internet.  This goal is not\nbeing chased vigorously, but the foundation of the goal needs to be\nprepared.\n\n\nVirtualenv\n-------------------\n\nThis state prepares the different python virtual environments that are used with\npaella.\n\n\nSaltMaster\n-----------------\n\nThis state is responsible for installing the salt master.  Each machine\nthat is installed with paella will have salt-minion installed and the\nsalt master will configure those machines.\n\n\nMain Server\n-------------------\n\nThis state depends on apache, virtualenv, and postgresql.  This state\nprepares the paella pyramid web server application and the paella database.\nThis state also depends on the webdev state that is responsible for building\nthe static resources for the web browser.\n\nWimLib (Optional)\n-----------------------\n\nWimlib is used to manage WIM images.  Wimlib is necessary to extract the\nboot.wim from the AIK iso and create the WinPE iso used in paella.  The \nschroot and pbuilder packages are installed and configure to build wimlib\npackages for i386 arch. The wimlib packages are uploaded to local\npaella debrepos.\n\nPaella Client\n------------------\n\nPaella client is a very simple command line tool to talk to the paella\nserver.  Currently it is the main manner to submit a new machine to\nthe paella database.  There is also a command to set the machine to be\ninstalled, but not a command to unset a machine. \n\nWinPE (Optional)\n--------------------\n\nThis state builds the WinPE iso files that will be used to instal windows\nsystems.  The example i386 iso file that is made will perform an automated\ninstall.  An unattended file needs to be made for amd64 for the other iso\nto do the same.\n\nThere is also an iso file created that executes bcdboot to install the\nbootloader on windows installs.  This file is needed when using the wimlib\ntools to install a WIM image to a hard drive.  After the image is\ninstalled, a virtualbox instance is loaded that boots the iso and\ninstalls the bootloader on the hard drive.\n\nDebian Live\n-------------------\n\nDebian live systems are used with paella to assist with installs, management,\nand other unforeseen tasks.  The live system has the command line tools to\nsubmit a machine to the paella server.   It also has wimlib ready to install\n[WIM](FIXME)images to the hard drive.  All the files and configuration to\nbuild the live systems are installed with this set of states.\n\nDriver Packs (Optional)\n-----------------------------\n\nWhen installing windows systems, drivers are necessary.  There are driver\npacks available on the internet, and this state is written to retrieve\nand prepare the driver packs for use with windows installs.  This is a work\nin progress and unfinished.  Downloading the driver packs requires using\nbittorrent.  I have written a python script that performs the job, however\nwith some service providers apparently blocking bittorrent traffic, an\nalternative retrieval method should be explored.  It's possible that\npreparing this part of paella may have to be left as an exercise for the\nend user, with insructions given, rather than a completely automated\nsetup as desired.\n\n\nNetboot\n-------------\n\nMuch of the preparation described above is put together in the netboot\nstate.  This state prepares the debian installer in the tftpboot directory,\nas well as building the debian live systems and installing those.  These\nstates also prepare tftpd-hpa and the other files in the tftpboot directory\nthat are served by tftpd.  A live system is built for each architecture.  This\nstate can take a while to complete.  This state also helps to make sure that\nthe tftpd service and nfsd service are configured and running properly.\n\n\nWinbuilder (Optional)\n--------------------------\n\nThis state will eventually be used to build the salt-minion for windows in\nan automated manner.  There is an open github issue for this topic and\nI desire to have this done at some point in my spare time.\n\n\nBy the time that the masterless salt provisioning in vagrant makes it to\nthe winbuilder state, the paella server should be fully prepared to start\nexecuting network installs.\n\n## Using Vagrant to bootstrap your network\n\nWhile the vagrant development environment is a good tool to configure\nand test paella, on normal virtualbox setups, it only installs to virtual\nmachines.\n\nThe vagrant machine can be used to install bare metal machines.  All that\nis necessary is a secondary network interface on the host machine that\npaella resides upon.  The Vagrantfile (FIXME) has a commented section\nthat will help configure the virtual machine to be bridged across the\nsecondary network interface on the host.  The host machine should be\nconfigured statically.  If the paella server ip on it's local network is\n10.0.4.1, the host machine should be set statically to 10.0.4.2, or\nanother appropriate ip that will not conflict with the dynamic addresses\nthe dhcp server provides to network clients.\n\n\n", "id": "saltconfig"}