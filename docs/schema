.. -*- mode: rst -*-

Paella Database Design 
===========================

Database Schema
----------------------------

The database schema is not very complicated.

The **primary tables** are:

+ textfiles

  - a table containing an id, md5sum, size, and
    text of every template and script used in the
    database.

+ scriptnames

  - a list of names for the scripts

+ suites

  - just a list of suite names, the other columns are
    deprecated.

+ apt_sources

  - these are similar to the lines in /etc/apt/sources.list

+ suite_apt_sources

  - this table links apt sources to suites

+ apt_source_packages

  - a list of packages available for an apt-source

+ default_environment

+ current_environment

+ archive_keys


Other tables are in related sets:

+ **suite tables**  -- there is a set for each suite in suites table

  - sarge_packages

    + a list of all the packages available to this suite

  - sarge_traits

    + a list of all the traits_ in this suite

  - sarge_trait_package

    + relates traits to packages

    + action on the package can be remove, install, config, reconfig

      - remove will remove the package, if installed

      - install will install the package

      - config does nothing right now

      - reconfig runs dpkg-reconfigure -plow on the package

  - sarge_trait_parent

    + relates traits to other traits

    + current code can't handle cyclic dependencies

  - sarge_scripts

    + relates traits and scriptnames and textfiles

  - sarge_templates

    + relates traits to packages and textfiles

    + this is where the templates are located

    + info can be preserved for user/group ownership
      and file mode.

    + template tags have the form::


       <--|trait:name|-->
       
     where trait is the name of the trait
     and name is the name of the variable
     for example::

        <--|xwindow:driver|-->


    + parent directories created before installing the
      template will be root:root and system umask
      
  - sarge_variables
    
    + relates traits to name, value pairs

    + a dictionary is made from this table and is used
      in the templates and in the scripts

    + the keys in the dictionary are in the form
      as the template tags mentioned above, without
      the tag markers.  For example::

	  global:timezone


    + the values in the dictionary are in the form of
      templates, tags and all.  This lets you substitute
      other variables in parts of the value. For example::

	    global:timezone = <--|global:area|-->/<--|global:zone|-->


+ **profile tables**

  - profiles_

  - profile_family

  - profile_trait

  - profile_variables

+ **family tables**

  - families_

  - family_environment

    + this should be renamed to family_variables to match
      the naming of the other tables

  - family_parent

+ **machine tables**

  - machines 

    + list of machines_

    + has columns for diskconfig, kernel and profile

  - diskconfig

    + a list of disk config files to be used with setup-storage
      for the machine installer.  These should be integrated into
      the textfiles table in the future.

  - kernels
    
    + a list of kernel package names for the machine installer

  - machine_parent

  - machine_family

  - machine_variables

  - machine_script

-----------------------------------

Database Setup
--------------------------

	example::
		
		apt-get install postgresql
		su postgres
		createuser -a -d adminuser
		createuser -A -D paella
		createlang plpgsql template1	
		exit
		su adminuser createdb paella

You should setup /etc/postgresql/pg_hba.conf to allow access to the database by
paella from anywhere on the local network, and allow adminuser from your management
desktop.


toc_

.. _toc: index.html

-------------------------------------------------

.. _mounts: #mount
.. _families: #family
.. _profiles: #profile
.. _filesystems: #filesystem
.. _machine_type: #machine-type
.. _machine_types: #machine-type
.. _traits: #trait
.. _machines: #machine
