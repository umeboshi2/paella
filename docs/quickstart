Paella Quick Start Guide
===========================
This guide is unfinished.  If you are reading this, do not expect the guide to be correct or
accurate.  This guide will not be ready to read, and the steps outlined should not be 
attempted until this paragraph is removed.

.. contents:: :backlinks: entry

Introduction
--------------------

.. introductory comment


Paella depends on a particular type of setup to operate.  This document details how to 
bootstrap that setup, starting from the bare minimum requirements.


-------------------

Requirements
==========================

Debian Etch
------------------
It is best to start with a running debian desktop.  The upcoming etch release is
what is currently supported.  Sarge will probably not work as paella requires python 
2.4 to operate.  Using sid may work also, especially while etch is still in testing, but this 
has not been tested.

Hardware
-----------------
This quick start routine was developed and tested using a laptop with 512MB of memory,
and a 1GB swap partition.  You could probably get by with less which I will try to estimate 
later.  Most of the memory is required to run the user mode linux processes, and this can be 
adjusted by providing more swap for the user mode processes to use.


Postgresql Database
--------------------------------
A postgresql database is required to use paella.  The database server must allow tcp 
access.  A database user named "paella" must be created and allowed access to the paella 
database without authentication.  The paella user has only read access to most tables, 
although there are a couple of tables that are setup specifically for write access.

More specific instructions on configuring the database server are provided in a later section.


User Mode Linux
----------------------------------
User mode linux is used to help test paella installations  in a limited environment where it is 
not feasible to setup a network of machines.  It can be useful when testing a new configuration 
of network services on a test network without interfering with the normal network.

In order to follow most of the steps in this guide, the user-mode-linux and uml-utilities packages 
are required to be installed.  More specific instructions on configuring user-mode-linux and the 
uml-utilities package are provided in a later section.

Setup paella from subversion
===============================================

Install Subversion
----------------------------
You will need to install subversion to setup the environment necessary to run paella.
As root::

	apt-get install subversion

Obtain the quick setup script
-----------------------------------------------
type::
	
	svn export svn://svn.berlios.de/paella/trunk/config/scripts/paella-devel-quick-setup

This file should already be executable, if not, do chmod +x paella-devel-quick-setup.

You should edit the file and change the variables at the top to your needs.  When you are
ready, run the script, install the packages, and make the changes to your .bashrc .  If you 
don't want to make the changes to your .bashrc, you can put the lines in another file that 
you will have to source before running any of the scripts.

Setup Database Server
=====================
Paella is developed and used with postgresql version 7.x .  It may work with newer versions, but 
it is not tested.  It is recommended that you run the database server on a host on your local 
network instead of the host you'll be using paella on.  This is not necessary, but it does help 
the performance quite a bit.

If you are new to using postgresql, I suggest reading 
/usr/share/doc/postgresql-7.4/README.Debian.gz first.


	Steps to setup paella database::
		
		apt-get install postgresql
		su postgres
		createuser -a -d adminuser
		createuser -A -D paella
		exit

Next, you will have to edit a couple of configuration files as the postgres user.

Edit postgresql.conf
------------------------------
You will probably have to edit /etc/postgresql/7.4/main/postgresql.conf , and
set "tcpip_socket = true" .

Edit pg_hba.conf
--------------------------
You will have to edit /etc/postgresql/7.4/main/pg_hba.conf, and add some lines:

If your database server is not on your desktop, but on the local network, you
will have to allow access to the paella database from your machine.
example::

	#TYPE	DATABASE	USER		IP-ADDRESS	IP-MASK		METHOD
	host	paella		paella		<my ip address>	255.255.255.255	trust
	host	paella		adminuser	<my ip address>	255.255.255.255	ident sameuser

If your database server is on your desktop, you need to allow access from your uml network.
example::

	#TYPE	DATABASE	USER		IP-ADDRESS	IP-MASK		METHOD
	host	paella		paella		10.0.1.0		255.255.255.0	trust
	host	paella		adminuser	10.0.1.1		255.255.255.0	trust



dbusers
-------------
talk about admin, paella users

create the database::

		createdb paella
		createlang plpgsql paella

another section
-------------------------------
something else


Setup User Mode Linux
======================

Install packages
--------------------------
First off, you will need to get root and install a couple of packages::

      apt-get install user-mode-linux uml-utilities


Configure TAP Network
---------------------------------------
Be sure to read /usr/share/doc/uml-utilities/README.Debian, and follow the instructions 
there to setup the tap network.  

This quick start procedure uses the 10.0.1.0 network for the user-mode-linux machines by 
default.  Here is what to add to /etc/network/interfaces::

	       auto tap0
	       iface tap0 inet static
		     address 10.0.1.1
		     netmask 255.255.255.0
		     tunctl_user uml-net


You will probably want to add yourself to the uml-net group::

	 adduser username uml-net

Masquerade TAP Network
------------------------------------------------
You will need to setup iptables to get your uml machines to access the rest of the network.
As root type::

	iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
	echo '1' > /proc/sys/net/ipv4/ip_forward

This is assuming that eth0 is your main network interface.  You may want to add these lines
to your /etc/rc.local script.


startup database
=================

section
-----------------------------------

discuss it


Getting started with paella (outdated)
===============================================

People who will get the most benefit out of paella are IT consultants that manage
multiple disjoint networks.  You may also benefit from it if your network is large enough,
and you have mostly debian machines on it.  If you only maintain one network with a few
machines, e.g. a firewall, a server, and a couple of desktops, the time involved it setting up
paella and maintaining configurations might probably be more than just using more simple
backup and restore methods.

There are currently no real releases of paella, because i dislike the file release system at
berlios, so you will have to check out the code via subversion, or alternately you can grab
the debian packages from http://gregscomputerservice.com.  The line for the sources.list
is 'deb http://gregscomputerservice.com/debian/local common/'.

A person who uses paella is expected to understand how to perform basic system 
administration on a debian system.  They should also be comfortable with building their
own debian packages from source, and debianizing a generic source application.  Paella 
makes use of mini-dinstall to maintain a local mini-repository and can install systems that 
reference that repository.  This provides a fairly simple way to add custom packages to the 
systems that you will be designing.

If you feel that you may benefit out of paella, here is how to get started.  If you don't want to
use the apt source above, you can check it out from subversion at berlios.  Paella
depends on Useless.  Useless is a collection of python modules that I use in other database 
applications.

to get useless:
svn checkout svn://svn.berlios.de/useless/trunk useless

to get paella:
svn checkout svn://svn.berlios.de/paella/trunk paella

You can build the packages with debuild, or fakeroot debian/rules binary.


--------------------------------------

Hardware Recommendations
------------------------------------------

Since the paella-nfsinstaller runs on a nfsroot, it is necessary to have some sort of network 
to support this.  Paella works best with at least one dedicated server and a management 
desktop, both running debian.  

Server:

The server will be responsible for running the nfs-server, the boot-server, the postgresql 
server, and the webserver. It is recommended that you have a local mirror of a debian 
repository on the server, and have it accessible over http.  You should also install the 
paella-debrepos package on this machine to create and maintain your custom debian 
repository.

	Database Setup::
		
		apt-get install postgresql
		su postgres
		createuser -a -d adminuser
		createuser -A -D paella
		createlang plpgsql template1	
		exit
		su adminuser createdb paella

You should setup /etc/postgresql/pg_hba.conf to allow access to the database by
paella from anywhere on the local network, and allow adminuser from your management
desktop.

The setup of the boot-server and the nfs-server are beyond the scope of this 
document, but the profiles are defined in the default database provided with paella.  So 
instead of taking the time to setup the boot-server and nfs-server manually, you can use the 
paella-chroot-install script to create the machine and tar it up.

Desktop:

The desktop should be about 400MHz Pentium or better with >= 1024x768 resolution, 
capable of running kde.  It is necessary to have access to your database on the server.  You
should also have your EDITOR environment variable set to something that will pop-up 
a window in X.  On this machine you will want to install the paella-admin and the 
paella-defaultdb packages.  The default config file is located at /etc/paellarc.  You will
probably want to copy this to ~/.paellarc and edit it.


-----------------------------------

Local Debian Repository
------------------------------------

Paella is built to make use of you local debian repository.  The paella-debrepos package 
uses (and depends on) mini-dinstall.  If you haven't used mini-dinstall, you should review 
the documentation for it.  Install the paella-debrepos package on the server.  The init script 
should fail because you are likely not to have a debrepos user.  This will be fixed later.  
Anyway, in the root of the debian mirror, there needs to be a 'local' directory.  The 
mini-dinstall daemon will be run from here. In the 'local' directory there needs to be a 
directory for each suite you have in paella, plus one called 'common'.

------------------------------------

Using Paella-Management
-------------------------------------

The management interface is going through changes.  Paella started with a gtk interface, 
and as time passed, the qt/kde toolkit started looking more appealing.  As a result, the
gtk interface works, but it is sloppy, and not going to be fixed.  The kde interface won't do 
very much right now, but bugs will be fixed on it.  A good portion of setting up and 
configuring the machines is done with the gtk interface, so for the time being, anybody 
using paella will have to bear through using it until the kde interface is ready.


ending section
-----------------------------------------------------





.. _mounts: #mount
.. _families: #family
.. _profiles: #profile
.. _filesystems: #filesystem
.. _machine_type: #machine-type
.. _machine_types: #machine-type
.. _traits: #trait
.. _machines: #machine
