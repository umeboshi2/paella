#!/usr/bin/python2.3
import os
import commands
from os.path import join
from paella.base.util import makepaths, wget
from paella.installer.toolkit import InstallerTools
from paella.installer import nfsbootcd

def pxe_base_data(label, kernel=None, initrd=None, mntdev='nomount'):
    lines = ['# default paella boot server config',
             'default %s' % label,
             'prompt 1',
             'say "--------------------------"',
             'say "Paella Network Boot Server"',
             'say "--------------------------"',
             'say "mem for memtest(not here)"',
             'say "enter for paella installer"',
             'say "autoboot in 10 seconds"',
             'DISPLAY boot.msg',
             'f1 boot.msg',
             'f2 say "help me"',
             '#timeout 100',
             'timeout 10'
             ]
    lines.append('label %s' % label)
    if kernel is None:
        kernel = 'vmlinuz-%s' % label
    if initrd is None:
        initrd = 'initrd.img-%s' % label
    lines.append('kernel %s' % kernel)
    argline = 'append initrd=%s netdev=probe ip=dhcp' % initrd
    
    argline += ' devfs=%s root=/dev/nfs' % mntdev 
    lines.append(argline)
    return '\n'.join(lines) + '\n'


def get_uri(kernel):
    print kernel
    cmd = 'apt-get --print-uris install %s' % kernel
    print cmd
    d = commands.getoutput(cmd)
    print d
    l = [l for l in d.split('\n') if l.find('.deb ') > -1 and l.find(k) > -1]
    if len(l) != 1:
        raise Exception, 'bad fooo %s' % l
    u = l[0].split("'")[1]
    return u

it = InstallerTools()

bpaella = join(it.target, 'boot', 'paella')
pxecfg_path = join(bpaella, 'pxelinux.cfg')
makepaths(pxecfg_path)

pxelinux = join(it.target, 'usr/lib/syslinux/pxelinux.0')
debs = join(it.target, 'var/cache/apt/archives')
os.system('cp %s %s' % (pxelinux, bpaella))

kernel = it.get('boot_server_diskless_kernel')
print 'kernel is %s' % kernel
kroot = join(bpaella, 'kroot')
makepaths(kroot)
os.chdir(kroot)
#uri = get_uri(kernel)
#print 'uri is', uri
print 'cwd is', os.getcwd()
#wget(uri, kroot)
os.system('chroot %s apt-get --download-only install %s' % (it.target, kernel))
kernel_package = [x for x in os.listdir(debs) if x[:len(kernel)] == kernel][0]
kernel_package_path = join(debs, kernel_package)
makepaths(join(kroot, 'tmp'))
os.system('dpkg-deb -x %s tmp' % kernel_package_path)
os.system('mkinitrd -r tmp -o initrd.img-diskless')
os.system('mv initrd.img-diskless ..')
kernel_image = [x for x in os.listdir(join(kroot, 'tmp', 'boot')) if x[:7] == 'vmlinuz'][0]
kernel_image_path = join(kroot, 'tmp', 'boot', kernel_image)
os.system('mv %s ..' % kernel_image_path)
os.chdir(bpaella)
os.system('ln -s %s vmlinuz-diskless' % kernel_image)
default = file(join(pxecfg_path, 'default'), 'w')
mntdev = it.get('boot_server_mount_devfs')
default.write(pxe_base_data('diskless', kernel=kernel_image, mntdev=mntdev))
default.close()

#make bootable iso image in /boot/paella
nfsbootcd.make_image(kernel=kernel)
