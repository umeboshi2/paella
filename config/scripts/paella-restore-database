#!/usr/bin/env python
import os, sys
from os.path import join
from optparse import OptionParser

from useless.base import Error, debug

from paella.base import PaellaConfig
from paella.db import PaellaConnection

from paella.db.main import DatabaseManager
from paella.uml.bootstrap import make_base


parser = OptionParser()
cfg = PaellaConfig()
db = 'database'
rp = 'debrepos'
parser.add_option('--mirror', action='store', type='string', dest='remote',
                  default=cfg.get(rp, 'http_mirror'))
parser.add_option('--database', action='store', type='string', dest='dbname',
                  default=cfg.get(db, 'dbname'))
parser.add_option('--host', action='store', type='string', dest='dbhost',
                  default=cfg.get(db, 'dbhost'))
parser.add_option('--user', action='store', type='string', dest='dbusername',
                  default=cfg.get(db, 'dbusername'))

opts, args = parser.parse_args(sys.argv[1:])
dsn = dict(dbusername=opts.dbusername,
           dbhost=opts.dbhost,
           dbname=opts.dbname,
           dbpassword=None,
           autocommit=cfg.get(db, 'autocommit'))
conn = PaellaConnection(dsn)
if not args:
    raise RuntimeError, 'need a directory arguement'
path = args[0]

dbm = DatabaseManager(conn)
dbm.restore(path)

