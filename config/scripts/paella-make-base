#!/usr/bin/env python
import os, sys
from os.path import join
from optparse import OptionParser

from useless.base import Error, debug

from paella.base import PaellaConfig
from paella.uml.base import UmlConfig

from paella.uml.bootstrap import make_base_filesystem

from paella.uml.bootstrap import UmlBootstrapper

parser = OptionParser()
parser.add_option('--mirror', action='store', type='string', dest='mirror',
                  default='')
parser.add_option('--base-suite', action='store', type='string', dest='base_suite',
                  default='')
parser.add_option('--size', action='store', type='int', dest='size', default=300)
parser.add_option('--mkfs', action='store', type='string', dest='mkfs',
                  default='mke2fs')
parser.add_option('--script', action='store', type='string', dest='script',
                  default='')
opts, args = parser.parse_args(sys.argv[1:])

cfg = UmlConfig()

suite = args[0]
print suite
basefile = make_base_filesystem(suite, '%s.base' % suite, cfg=cfg,
                                size=opts.size, mkfs=opts.mkfs)
bootstrapper = UmlBootstrapper(suite, basefile, cfg=cfg)

if opts.script:
    bootstrapper.options['bootstrap_script'] = opts.script
if opts.mirror:
    bootstrapper.options['bootstrap_mirror'] = opts.mirror

proc = bootstrapper.run_uml()
while proc.poll() is None:
    pass

retval = proc.poll()
print 'retval', retval
if not retval:
    print 'suite', suite, 'bootstrapped successfully.'
    
