#!/usr/bin/python
import os, sys

from useless.base.path import path

from paella.installer.toolkit import InstallerTools
from paella.base.util import get_architecture

VBOX_XORG_CONF = '''# xorg.conf (X.Org X Window System server configuration file)
#
# This file was generated by dexconf, the Debian X Configuration tool, using
# values from the debconf database.
#
# Edit this file with caution, and see the xorg.conf manual page.
# (Type "man xorg.conf" at the shell prompt.)
#
# This file is automatically updated on xserver-xorg package upgrades *only*
# if it has not been modified since the last upgrade of the xserver-xorg
# package.
#
# If you have edited this file but would like it to be automatically updated
# again, run the following command:
#   sudo dpkg-reconfigure -phigh xserver-xorg

Section "InputDevice"
	Identifier	"Generic Keyboard"
	Driver		"kbd"
	Option		"XkbRules"	"xorg"
	Option		"XkbModel"	"pc104"
	Option		"XkbLayout"	"us"
EndSection

Section "InputDevice"
	Identifier	"Configured Mouse"
    Driver      "vboxmouse"
    Option      "CorePointer"
EndSection

Section "Device"
	Identifier	"Configured Video Device"
	Driver		"vboxvideo"
EndSection

Section "Monitor"
	Identifier	"Configured Monitor"
EndSection

Section "Screen"
	Identifier	"Default Screen"
	Monitor		"Configured Monitor"
EndSection

'''

def configure_xorg(size='1024x768'):
    xorg_output = []
    xorg_filename = it.target / 'etc/X11/xorg.conf'
    if not xorg_filename.isfile():
        print "there's no xorg.conf, skipping configure"
        return
    xorg_backup = path('%s.paella-backup' % xorg_filename)
    print "Saving original xorg.conf to", str(xorg_backup)
    os.rename(xorg_filename, xorg_backup)
    print "Making new xorg.conf"
    xorg_filename.write_bytes(VBOX_XORG_CONF)
    if size is None:
        print "Not setting the default screen size in xorg.conf"
        return
    print "Adding default display mode to", xorg_filename
    set_size = False
    for line in file(xorg_filename):
        xorg_output.append(line)
        if line.split() == ['Monitor', '"Configured', 'Monitor"']:
            print "DEBUG: line found", line
            xline = '\tSubSection\t"Display"\n'
            xorg_output.append(xline)
            xline = '\t\tModes\t"%s"\n' % size
            xorg_output.append(xline)
            xline = '\tEndSubSection\n'
            xorg_output.append(xline)
            set_size = True
    if not set_size:
        print "WARNING: couldn't locate the proper line to set default screen size"
    xorg_filename.write_bytes(''.join(xorg_output))
    

print "post script for vboxbase machine"
it = InstallerTools()
env = it.env()

paella_site = it.target / 'root/site'

sys.path.append(str(paella_site))

from PaellaInstall.General import install_packages

print "target directory", it.target

sources_list_filename = it.target / 'etc/apt/sources.list'
sources_list_official_filename = path('%s.official' % sources_list_filename)
sources_list_installer_filename = path('%s.installer' % sources_list_filename)
if not sources_list_official_filename.isfile():
    print "replacing /etc/apt/sources.list with installer version"
    official = sources_list_filename.bytes()
    sources_list_official_filename.write_bytes(official)
sources_list_filename.write_bytes(sources_list_installer_filename.bytes())

xorg_filename = it.target / 'etc/X11/xorg.conf'


if False:

    print "until new guest modules are made, we are just going"
    print "to hack xorg.conf"
    sys.stdout.flush()
    configure_xorg(size='1024x768')
    print "WARNING: remember to edit post script on vboxbase machine"
    print "when new guest modules are built and ready"
    sys.exit(0)

arch_flavor = dict(amd64='amd64', i386='606')

install_guest_modules = it.get('global:install_vbox_guest_modules')
do_install = install_guest_modules in ['True', 'true', 'Yes', 'yes']
if xorg_filename.isfile() and do_install:
    print "preparing virtualbox packages"
    #print "-686 is hardcoded, should use kernel info to pick correct package"
    arch = get_architecture()
    flavor = arch_flavor[arch]
    

    packages = ['virtualbox-ose-guest-modules-2.6.26-2-%s' % flavor,
                'virtualbox-ose-guest-utils']
    print "Installing Packages: %s" % ', '.join(packages)
    sys.stdout.flush()

    it.chroot(['mount', '/proc'])
    install_packages(it, packages, usertag='paella-machine-vboxbase')
    it.chroot(['umount', '/proc'])

    #print "Using that perl script to modify the xorg.conf for virtualbox"
    #it.chroot(['/usr/share/virtualbox/x11config.pl'])
    #print env.keys()
    if 'global:x11_screen_size' in env.keys():
        size = it.get('global:x11_screen_size')
        print "adjusting x11 screen size to", size
        configure_xorg(size=size)
    else:
        configure_xorg(size=None)
else:
    print "no need for guest modules"
    



