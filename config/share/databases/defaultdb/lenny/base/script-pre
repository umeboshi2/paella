#!/usr/bin/python
import os, sys
from os.path import join
from useless.base.util import makepaths
from paella.installer.toolkit import InstallerTools

# setup InstallerTools
it = InstallerTools()
if it.trait != 'base':
    print 'PROBLEM have to set trait to base'
    it.set_trait('base')

# debug - show sources list
print file(os.path.join(it.target, 'etc/apt/sources.list')).read()

# update package lists
cmd = it.chroot_command('apt-get -y update')
# do two updates to catch errors
for update in ['first', 'second']:
    print update, 'update'
    retval = os.system(cmd)
    if retval:
        print 'something bad happened', retval
        sys.exit(retval)

dselect_upgrade_packages = """
at
bind9-host
dc
dictionaries-common
dnsutils
doc-debian
doc-linux-text
exim4
exim4-base
exim4-daemon-light
file
finger
ftp
gettext-base
gnu-efi
iamerican
ibritish
ispell
lsof
m4
mailx
make
mime-support
mpack
mtools
mtr-tiny
mutt
ncurses-term
nfs-common
openssh-client
patch
pciutils
perl
perl-modules
pidentd
policycoreutils
portmap
procmail
python
python-central
python-minimal
python-newt
python-selinux
python-semanage
python-support
python2.4
python2.4-minimal
reportbug
selinux-policy-refpolicy-targeted
sharutils
strace
tcsh
telnet
texinfo
time
ucf
w3m
wamerican
whois
"""
dselect_list = dselect_upgrade_packages.split('\n')
dselect_list = [line.strip() for line in dselect_list if line.strip()]

if it.lget('do_dselect_upgrade') in ['true', 'True']:
    print 'doing dselect-upgrade'
    packages = ' '.join(dselect_list)
    cmd = 'apt-get -y --force-yes install %s' % packages
    os.system(it.chroot_command(cmd))
else:
    print 'dselect-upgrade not requested'
    

