#
# bootcdwrite.conf
#
# Requirements:
#   SRCDISK has to fit on one CD
#   RAMFS has to be big enough to hold /home, /var, /etc, /dev, /tmp, /root
#   VAR has to be big enough to hold ...
#   You have to change at least the following variables in this file: 
#     SRCDISK, KERNEL, RAMDISK_SIZE, TYP, CDSCSI, CDSPEED and CDDEV

# Define the filesystem root from which to build an image.
# Example to build bootcd from local system:
#   SRCDISK=/
SRCDISK=/freespace/nfsroot

# Define the kernel which is used
KERNEL=$SRCDISK/boot/vmlinuz-2.4.22isonfsroot1

# Two Ramdisks ram1 and ram2 will be created, with the followin directories: 
#   ram1: /dev /etc /home /root /tmp
#   ram2: /var
# Both Ramdisks have the same size which is defined by RAMDISK_SIZE
#
# Example: If you want to spend 16MB for RAM Filesystems:
#   RAMDISK_SIZE=8192
RAMDISK_SIZE=8192

# TYP=CD|DVDPLUS
# Define TYP=CD if you have a CD-RW drive. Define TYP=DVDPLUS if you have a
# DVD+RW drive and want to write a DVD+ media or TYP=CD if you want to
# wirte a CD media. 
# To use TYP=DVDPLUS the debian package bootcd-dvdplus must be installed.
TYP=CD

# CD / DVD+ Writer Informations
# If TYP=CD then try "cdrecord -scanbus" to get CDSCSI information. Example:
#   CDSCSI=0,2,0
# If TYP=DVDPLUS then use the scsi device you specify to mount a CD/DVD in
# your DVD+ Writer. If you have an IDE unit, use ide-scsi emulation. 
# (See http://fy.chalmers.se/~appro/linux/DVD+RW/). Example:
#   CDSCSI=/dev/scd0
CDSCSI=burner

# Needed if you specified TYP=CD
CDSPEED=8

# CDDEV=/dev/hda|/dev/hdb|/dev/hdc|/dev/hdd|/dev/scd0|/dev/scd1|/dev/scd2
# You can specify one or more CD devices to boot from.
# The first entry is the default. The rest will be given as boot options 
# to the user. See DISPLAY.
#   CDDEV="/dev/hdc /dev/hda /dev/hdb /dev/hdc /dev/hdd /dev/scd0 /dev/scd1"
CDDEV="/dev/hdc /dev/hda /dev/hdb /dev/hdc /dev/hdd /dev/scd0 /dev/scd1"

# BLANKING=yes|no|auto
# If you want to rewrite a CD or DVD you have to specify BLANKING=yes
# If BLANKING=auto is specified, bootcdwrite will always try to blank the CD,
# but it will ignore all errors while blanking.
BLANKING=no

# DISPLAY=<DISPLAY>|""
# Text to Display at Boottime (see syslinux doku)
# This option is not supported for HPPA
# Example: (Where you could place display.txt)
#   DISPLAY="$SRCDISK/usr/share/bootcd/display.txt"
# There is a predefined DISPLAY which offers the boot options 
# /dev/hda, /dev/hdb, /dev/hdc, /dev/hdd, /dev/scd0 and /dev/scd1:
#   DISPLAY="/usr/share/bootcd/default.txt"
DISPLAY="/usr/share/bootcd/default.txt"

# If you do not have a cd burner and only want to create an iso_image
# then set ISO_ONLY="yes" also set BLANKING="no" later in this file.
ISO_ONLY="yes"

# DO_CHECK=yes|no
# To check for possible problems can take a long time.
# But it is recommended to do the checks 
DO_CHECK=yes

# If you need kernel options other than  "root=..." and "ramdisk_size=..."
# see append in lilo.conf(5)
# Example: 
#   APPEND=\\\"aha1542=0x230 console=ttyS0,9600n8\\\"
APPEND="ip=dhcp root=/dev/nfs"

# If SRCDISK does not fit on one CD you can now decide which parts of 
# SRCDISK should not go to CD.
#
# Example to exclude /home/user1 and /home/user2
#   NOT_TO_CD="$SRCDISK/home/user1 $SRCDISK/home/user2"
# Example
#   NOT_TO_CD="$SRCDISK/home/bs/download $SRCDISK/home/bs/vmware"
NOT_TO_CD=""

# When you boot from CD parts of the CD will be copied to ram
# Here you can decide, what should not go to ram.
#
# The directories /etc /var /dev /tmp /home and /root will be
# in RAM because they have to be writable. 
#
# On CD this dirs will get different names (/etc.ro, /var.ro, ...)
# but you do not have to use those different names in NOT_TO_RAM any more !!!
#
# If you exclude files in NOT_TO_RAM, they will be copied to CD and you
# will find a symbolic link instead of the file in RAM pointing to the file
# on CD.
#
# Example
#   If you want to exclude /home/bs/bigfile and /home/bs/bigdir/
#   NOT_TO_RAM="$SRCDISK/home/bs/bigfile $SRCDISK/home/bs/bigdir"
#
NOT_TO_RAM=""

# SSHOSTKEY=yes|no
# If you are using ssh it is helpfull to have a unique ssh hostkey for
# each CD. This will be generated at burntime with SSHHOSTKEY=yes.
SSHHOSTKEY=yes

# Free Space for Log and Image
ERRLOG=/var/log/bootcdwrite.log
VAR=/var/spool/bootcd 

# FLOPPY_RUNTIME_DEV=<floppy device>|""
# When you boot from cd you read changes from this device.
FLOPPY_RUNTIME_DEV=/dev/fd0

# The floppy will be formatted when bootcdwrite is called if you define
#   FLOPPY_CREATE_DEV="/dev/fd0". 
# If you do not want to build a floppy spezify 
#   FLOPPY_CREATE_DEV=""
FLOPPY_CREATE_DEV=""

# BOOTFLOPPY=yes|no
# If you want to boot from FLOPPY specify BOOTFLOPPY=yes. This reduces
# space on floppy used by bootcdflopcp. For this to work FLOPPY_CREATE_DEV
# has to be specified.
# For HPPA this option is not supported and must be set to no.
# Default:
#   BOOTFLOPPY=no
BOOTFLOPPY=no

# BOOT_ONLY_WITH_FLOPPY=yes|no
# If you want to boot several machines from the same cdrom, you must have
# the individual configuartion (exp: /etc/network/interfaces) on floppy.
# If one can not be mounted it is a good idea to stop booting and to wait
# for manual interaction instead of comming up with a wrong configuration.
#
BOOT_ONLY_WITH_FLOPPY=no

#
# If CLEAN_VAR=yes then some cached files in /var will be deleted, before 
# /var will be copied to bootcd. This will minimize needed space on CD.
# At this time only the following command will be executed: apt-get clean
# You can disable this with CLEAN_VAR=no 
# Default:
#   CLEAN_VAR=yes
CLEAN_VAR=yes

#
# FASTBOOT=yes|no
# If FASTBOOT=yes then additional images for the ramdisk will be created 
# by bootcdwrite and copied to CD. This allows faster booting,
# but needs extra space on CD
# Default:
#   FASTBOOT=yes
FASTBOOT=yes

# ISOLINUX=auto|yes|no
# See /usr/doc/syslinux/isolinux.doc.gz. 
# If syslinux is recent enough then isolinux can be used instead of syslinux
# and ISOLINUX=auto will be treated as ISOLINUX=yes.
# If you want to use syslinux instead you have to use ISOLINUX=no.
# Default:
#   ISOLINUX=auto
#
ISOLINUX=auto

#
# SYSLINUX_SAVE=yes|no
# This option is only relevant if isolinux is not used.
# If SYSLINUX_SAVE=yes then syslinux is called with -s option. The manpage
# of syslinux says: this installs a "save, slow and stupid" version of
# syslinux. In earlier version the -s option was always used. Now you
# can change it.
# Default:
#   SYSLINUX_SAVE=yes
SYSLINUX_SAVE=yes

# ARCH=auto|HPPA|X86|ia64
# You can create bootcd for HP PA-RISC too. It is possible to let
# bootcdwrite detect your architecture with ARCH=auto.
# To use ARCH=HPPA the debian package bootcd-hppa must be installed.
# Default:
#   ARCH=auto
ARCH=auto

# DEVFS=yes|no
# With devfs you do not need devicefiles and inodes in /dev/*.
# If running diskless this will save some ram.
# See /usr/src/linux/Documentation/filesystems/devfs/README for more infos.
#   DEVFS=no
DEVFS=no

# INITRD=<PATH_TO_INITRD_IMAGE>|""
#
# Recent official debian kernel images (2.4.x) have started installing initrd
# images. If you want to use such a kernel to build a bootcd without 
# recompiling the kernel you have to use an initrd image. The installed 
# initrd image used to boot from harddisk does not always work from cdrom. 
# So you have to create your own initrd image. Or you can change the default 
# INITRD_IMAGE with the tool bootcdmkinitrd.
#
# INITRD="$(dirname $KERNEL)/initrd.img-$(basename $KERNEL | cut -d- -f2-)"
INITRD=""

# TO_FSTAB=<VALID_FSTAB_ENTRIES>|""
#
# Add additional mount point entries to the cdrom's /etc/fstab. If you don't
# want additional mount points, leave it as "".
#
# TO_FSTAB="/dev/hdc1 /home ext3 defaults 1 1"
TO_FSTAB=""

# COMPRESS=<yes|no|auto>
# If you want to have a transparent-compression ISO 9660/Rock Ridge 
# filesystem define COMPRESS=yes. If not, set COMPRESS=no.
# If you want bootcdwrite to check, if you need compression because
# running out of space say COMPRESS=auto. 
# If you define COMPRESS=auto bootcdwrite tries also to check, if you have 
# all the necessary software installed. Therefore you have to define 
# DO_CHECK=yes if you define COMPRESS=auto.
COMPRESS="auto"

# DISABLE_CRON=<LIST_OF_FILES>|""
#
# Files listed in DISABLE_CRON will be on the cdrom with a .no_run_on_bootcd
# suffix so run-parts won't execute them. The original file will be a link to
# /bin/true. This is meant for cron maintainance scripts which are useless on a
# static cdrom. The default is to disable the daily find, standard and security
# scripts. With bootcd2disk this files will be reactivated again.
#
DISABLE_CRON="$SRCDISK/etc/cron.daily/find $SRCDISK/etc/cron.daily/standard $SRCDISK/etc/cron.daily/security"
