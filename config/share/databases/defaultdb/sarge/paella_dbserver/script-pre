#!/usr/bin/python
import os

from useless.base.util import makepaths
from paella.installer.toolkit import InstallerTools

it = InstallerTools()

it.set_trait('paella_dbserver')
env = it.env()
#print env.keys()

bpath = '/usr/share/paella'
rpath = bpath
print 'bpath is:', bpath

while bpath[0] == '/':
    bpath = bpath[1:]
bpath = os.path.join(it.target, bpath)
makepaths(bpath)

nfshost = it.default.get('installer', 'nfs_common_host')
export = it.default.get('installer', 'nfs_common_export')
pdbpath = it.default.get('installer', 'common_paelladb')
usbdisk = it.get('paella_dbserver_debrepos_on_usbdisk')
mtpt = '/tmp/common'
makepaths(mtpt)
os.system('mount -o nolock %s:%s %s' % (nfshost, export, mtpt))
print mtpt, 'mounted'
print file('/proc/mounts').read()
mpath = os.path.join(mtpt, pdbpath)
os.system('cp -a %s %s' % (mpath, bpath))
os.system('umount %s' % mtpt)
print mtpt, 'unmounted'
print file('/proc/mounts').read()
log_export = it.get('paella_common_log_export')
network = it.get('global_local_network_cidr')
exports = file(os.path.join(it.target, 'etc/exports'), 'a+')
exline = '%s\t%s(rw,no_root_squash,async)\n' % (log_export, network)
exports.write(exline)
exports.close()
while log_export[0] == '/':
    log_export = log_export[1:]
makepaths(os.path.join(it.target, log_export))

if usbdisk == 'true':
    fstab = file(os.path.join(it.target, 'etc/fstab'), 'a+')
    fsline = '/dev/sda1\t/media/usbdisk\treiserfs\tdefaults,noauto\t0\t0\n'
    fstab.write(fsline)
    fstab.close()
    here = os.getcwd()
    os.chdir(os.path.join(it.target, 'var/www'))
    os.system('ln -s /media/usbdisk/debian')
    if 'fileserver' in it.traitlist:
        bpath = it.get('fileserver_base_path')
        while bpath[0] == '/':
            bpath = bpath[1:]
        common = os.path.join(bpath, it.get('fileserver_common_path'))
        fullpath = os.path.join(it.target, common)
        os.rename(fullpath, fullpath+'.orig')
        os.chdir(os.path.join(it.target, bpath))
        os.system('ln -s /media/usbdisk/common')
    os.chdir(here)
