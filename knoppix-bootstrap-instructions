Heres a new doc on how I did it.Hope some people enjoy this as much as me
------------------------------------------------
To bootstrap just say :
su
cd /
mkdir foo
debootstrap sid /foo/
This will download about 32meg of debs and set them all up then leave you with a /foo/ directory thats ready to change root to and start having fun.

When the debootstrap is done it may change you keyboard map to some wierd one but its no damage done.Just fiddle around and type "loadkeys -q us" and it's back to normal for good.

Next I said :
cp jail2 /foo/ (put in a script I wrote to make apt-task more fun)
chroot foo
mount -t proc /proc proc
nano /etc/apt/sources.list

Then write :
deb http://ftp.debian.org sid main contrib

Hit Ctrl+o to save then Ctrl+x to exit nano

apt-get update (resolv.conf is already done when you debootstrap)

Now I installed :
less jed mc and links so my jail2 script would have all functions enabled.

Next I executed ./jail2 and added the following :
------------------------------------------------
less jed links mc bitchx bzip2 dialog debootstrap ncftp2 mp3blaster cdrecord
mkisofs jed-extra mtr-tiny ssh bwbasic mutella deborphan rsync sl ninvaders
freesweep bash-doc rexima hexcurse parted gpart memtest86 netcat recover
ddrescue sc pinfo mpg321 traceroute strace pump whois textdraw finger
multitail whowatch symlinks sysutils bwm sel vtgrab splitvt screen cdw gpm
sonar htget beav
------------------------------------------------------------------
Then I installed the following IN this ORDER from knoppers sources at
http://developer.linuxtag.org/knoppix/
-----------------------------------------------
hwdata-knoppix kudzu-knoppix cloop-module-1.02-1 cloop-utils-1.02-1
kernel-2.4.22-xfs-all-deb hwsetup kudzu-knoppix-dev kudzu-knoppix-vesa
mkdesktophdicons-knoppix hotplug-knoppix knoppix-remountrw
scanpartitions-knoppix rebuildfstab-knoppix saveconfig-knoppix
netcardconfig-knoppix networkconfig-knoppix mkdosswapfile-knoppix
usleep-knoppix ppp-scripts-knoppix user-profile-knoppix
mkpersistenthome-knoppix testdisk sshstart-knoppix soundcardconfig-knoppix
rootshell-knoppix sudoers-knoppix syslinux-knoppix knoppix-customize sitar
sysvinit-2.84-166 genliloconf knoppix-hdinstall ddcxinfo kbdconfig
etcskel-knoppix netpipes ash-knoppix automount-knoppix checkmem

I used dpkg -i and installed all those one at a time and to install
kudzu-knoppix it didnt configure cause of depends missing so I ran
apt-get -f install and it grabbed python and then properly configured
everything.

To install sysvinit-2.84-166 I had to forse overwrite because it already had
an older version installed (it's part of the base) so I said :
dpkg --force-overwrite -i sysvinit-foo.deb
-------------------------------------------------------------------
Lets see...now we have the pure sid bootstraped base with nice packages
added and the right knopper debs installed for adding his magic.

Since I am running an installed Knoppix 3.3 remaster with the same kernel
and stuff I get the symlinks needed by going to a knoppix 3.3 remaster jail
and cp -a boot/ and mnt/ directories into my sid_jail
(I backuped and deleted the orginals in sid first)
Next I copied the symlinks for vmliniz and tmp as well as the resolv.conf
from /etc in the knoppix jail to the sid_jail.
------------------------------------------------------------
Now I decided to get smart so I umounted /proc in the sid_jail and left
chroot then went back in and copied for backup the /var/cache/apt/list
that apt-get update downloads and deleted the ones in the list directory.

Next I cleaned up the sid_jail and moved all the debs from
/var/cache/apt/archives out to another storage directory for backup then I
chrooted agian to sid and added a user with a passwd then apt-get cleaned
and ran /usr/bin/updatedb and /sbin/depmod -a and then cleaned up /var/tmp
as well as tmp/ and root/

Now I exit the sid_jail and used mc to compress it into a live-sid.tar.gz
this way I have one all setup that I can extract then edit and cleanup then its
ready to compress and burn.

Now I setup a sid_cd directory and copied in the latest Knoppix boot.img
loop-mounted that image and nuked the german.kbd and logo.16 then wrote my
own boot.msg and appended a single space and the number 2 to the end of the
first two APPEND lines in syslinux.cfg this allows me to boot clean to a
root prompt when I can setpasswords for users and type login.

Next I added a 32meg tar.gz of the stock sid base
a 98meg tar.gz pool of sid debs to my sid_cd directory.That 32 meg base will
extract to 65meg and will be good to use on a box with low ram.I also added
a 3.8 meg tar.gz that has all the symlinks and directories needed from
Knoppix to make the sid live.Also added a tech directory with my scripts and
a docs directory and a remaster directory with my build scripts.

Time to compress :
mkisofs -R sid_jail |create_compressed_fs - 65536 > /path/sid_cd/NEW/KNOPPIX

I was pleased to find the total bytes written was 165meg and the finnished
cloop file was only 65meg.

Now I cd /path/sid_cd
mv NEW KNOPPIX
cd KNOPPIX ls -U
cd ../../

Time to make the final iso :
mkisofs -r -J -b KNOPPIX/boot.img -c KNOPPIX/boot.cat -o tech2k.iso sid_cd

With everything I added my final iso was 210meg and has the live cloop fs of
Sid that I boot to and also a stock sid-base and a big pool of debs
including Knoppers 12meg new kernel.deb

The sid-base will do well on a ramdrive of 128meg as it's only 5meg
extracted and the cloop sid file will work on 6meg or more as its 165meg
extracted.

Time to test,
reboot

It works.Boots super fast no errors to a root prompt.Well it still had the
message about I need to ren e2fsck and the cd is mounted read only but who
cares.I have 768meg of ram and a 700meg writeable ramdisk with 12 consoles
and all the packages i need.

open -c 2 -l bash
Hit Alt+F2
cd /
cp -Rp KNOPPIX/ ramdisk/
chroot ramdisk/KNOPPIX
mount -t proc /proc proc
pppconfig
open -c 9 bitchx
apt-get update
And here I am
open -c 8 links

I made this cd with fewer and more carefully chosen packages because
my first one was 237meg extracted and I wanted it to be a little
smaller.Since I inclused a large pool of sid debs and also have full working
apt-get while live I can fetch whatever else i need on the fly.

------------------------------------------------------
Heres some notes I made on useing the cd :
-------------------------------------------------
It will boot and complain about being read only and recomend running
e2fsck which of course is no use on a live cd.However it boots you to a root
prompt and has all commands and 12 consoles working.It is NOT a limited
shell without job control but instead it's a very nice Sid cli system.
You will see a directory on / called ramdisk and this it writable and
limited only by the amount of ram you have.

Just ignore the error about the e2fsck I will fix it later believe me you
dont need the / to be writable because this turned out to be much better
than expected.Read on

If you have 256meg or more then just say :
open -c 2 -l bash
Hit Alt+F2
cd /
cp -Rp KNOPPIX/ ramdisk/
chroot ramdisk/KNOPPIX
mount -t proc /proc proc

You can now run pppconfig or whatever and get online then say :
apt-get update and have fun

The KNOPPIX is the live Sid console my cd boots to and this one is 165meg
uncompressed and 65 meg when compressed into a cloop file so 256meg ramdrive
should be pleanty but more is better.

If you have less ram then I also included an unmodified debootstraped
Sid base thats 32meg as a .tar.gz and 65meg uncompressed.Just copy that to
the ramdrive and say :
tar -xvvzf <filename>
then delete the tar.gz you copied to ramdisk and :
cd /
open a console and chroot to the 65meg base write a sources.list like :
deb http://ftp.debian.org sid main contrib
with nano and save as /etc/apt/sources.list
Then apt-get update and have fun.

On the /cdrom I included a pool of debs and
everything needed to build your own cd like this one even offline.
In that case put the debs in /var/cache/apt/archives and update.

It's a good idea to open -c 2 (thru-12) -l bash and start chroot from
another console so that you dont have to leave chroot if you want to hit F1
and mount your hd partition then go to the chroot jail and copy out saved
work.

You may need to say :
mount --bind /dev /ramdisk/your-jail/dev
before changing your root.Then you can open consoles and do whatever just
like your on a hd install in console mode.Dont forget to mount /proc as
above after you chroot.

[edit] I am now live online from the latest burn and binding /dev before
chroot is no longer nessessary.Everything is working great.


What we are doing here is running the system uncompressed in ram with the
full power of working apt-get.This means you can build your own live cds or
add compilers,tools or anything you want to your chroot jail and do whatever
just like when we remaster Knoppix for example.

Later I will write a bash menu that will do all this automaticaly for you
and chroot you with another menu script already running all from the press
of a single key in the menu choices.

As an added bonus once you change root to the ramdisk the cd no longer need
to spin because it's all extracted in ram and reads everything from there.
No hd is needed if you dont want to save something big.Can use the floppy
for new scripts and docs and such.

Running console sid in ram is so fast that words cant really describe it.

Another directory on the cd is at /cdrom/tech and contains many of my
scripts.To use it as is kust mkdir knoppix in the ramdisk /home and copy
tech to that location and go inside tech then execute ./console .

Another directory on /cdrom is called remaster and has more scripts.The most
usefull and well tested one is called jail2.Just cp this to the / of the
chroot jail and execute ./jail2 .You will need to install :
less mc and links if your working from the 65meg base.I will add these
to that base later as this distro was just born yesterday as of this writing
and is still under heavy development by myself.

You can also say "open -c 3 links" for example and go to F3 and links is
open and ready to use on that tty.Can do the same with any program.

This was all build from a debootstrap of Sid with Knoppers scripts added to
make it a live cd.

A suopped up damnsmall linux or the lnx-bbc would also work well for a
chroot jail and a gentoo stage3 also works well in chroot from debian.I have
also run the slackware-live.org mini-cd in a debian jail and the pld
rescue.iso may also be good as well as the systemrescue.org.

Soon I will build a 700meg cdr with all this as well as the base and extra
debs for woody and sarge gentoo slackware,etc..

I think I solved the keyboard loading the wrong layout but if not just
fiddle around and type "loadkeys -q us" and it will then be correct.

[edit] I am now on the live cd chrooted to the extracted sid file and all
the keyboard problems have been solved.All I had to do was remove the
/etc/console/booupttime.keybd.gz (not exact name but right directory).
Now the keyboard is 100% us layout.

-----------------------------------------------
Try this out if you dont want to remaster
---------------------------------------------
I am on 56k and cant host an iso but just realised you can get a taste
of it if you have the knoppix cd.

On your debian hd install :
su
apt-get install debootstrap
cd /
mkdir foo
debootstrap sid /foo/

Wait a few minutes and the foo directory will be all setup like a linux
install.

mkdir stock-debs
cd /foo/var/cache/apt/archives
mv *.deb /stock-debs
cd /
chroot foo
mount -t proc /proc proc
nano /etc/apt/sources.list

Write :
deb http://ftp.debian.org sid main contrib

Hit Ctrl+o to write then Ctrl+x to exit nano
apt-get update
apt-get install bitchx less mc links
apt-get clean
umount /proc
Type exit or Ctrl+d to leave chroot

Boot the knoppix live cd to runlevel 2 (console root prompt)
boot:knoppix 2

After the boot,
mount /dev/hda1 (or whatever)
cd /mnt/hda1
cp -a foo/ /path/to-knoppix-ramdisk (any writable location on the ramdrive)
cd /
open -c 8 -l bash
Hit F8 ( you want to start chroot on another tty so you have both systems
umount /dev/hda1
chroot /foo

Now you are in the Sid enviroment thats totaly extracted to ram and should be
using about 100meg or so.

mount -t proc /proc proc
pppconfig or pump or whatever u need for network yours may be fine by just
cp the resolv.cong from the booted knoppix /etc to the sid /etc if you run
into trouble try b4 chroot mount --bind /etc /foo/etc I use dialup and just
run pppconfig from the chroot jail with no mount --bind's just treat your
like its a chroot remaster jail on your hd.

apt-get update
have fun

The cd no longer needs to spin because your doing evevthing from the sid
base extracted to ram.

It's super duper fast and responsive.

When done hit F1 and go into the jail and save stuff to your hd if desired.
F8 back to jail
umount /proc
exit
reboot

My smallest sid base is 32meg compressed with tar.gz and 65meg un-compressed
to the ramdisk and should work fine in as little as 128meg ram.I have 768meg.

Usijng the toram feature with me live sid cd should let it use the swap as
well and run much bigger extractions with lower ram but then its accessing
the hd and not quit as fast.

Even when your in chroot on the ramdisk you can say
open -c 10 -l bash or
open -c 9 links
whatever

In sid just say passwd and give root one then type login
or adduser tech
login

You will need to edit the /etc .bashrc to get ls colors

Setup a nice sid base with what u want and its ready to run from knoppix
live or add the debs and do like that last doc I sent (the 50k one) and
build a live cd from a sid base thats allready got a user and everything
setup so that when you boot that cd all you do is say
open -c 2 -l bash
Hit F2
cp -Rp KNOPPIX/ /ramdisk
chroot ramdisk/KNOPPIX
mount -t proc /proc proc
apt-get update
have fun

Tech2k
