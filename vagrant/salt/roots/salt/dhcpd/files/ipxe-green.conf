# modified from https://gist.github.com/robinsmidsrod/4008017.git

allow bootp;
allow booting;
#next-server 10.1.1.2; # core.smidsrod.lan

# Disable ProxyDHCP, we're in control of the primary DHCP server
option ipxe.no-pxedhcp 1;

# Make sure the iPXE we're loading supports what we need,
# if not load a full-featured version
if    exists ipxe.http
  and exists ipxe.menu
  and exists ipxe.nfs
  and ( ( exists ipxe.pxe
      and exists ipxe.bzimage
      and exists ipxe.elf
      and exists ipxe.comboot
      and exists ipxe.iscsi
  ) or (
      exists ipxe.efi
  ) ) {
    filename "nfs://nas.smidsrod.lan/raid/boot/boot.ipxe";
    #filename "http://boot.smidsrod.lan/boot.ipxe";
}
elsif exists user-class and option user-class = "iPXE" {
    # We're already using iPXE, but not a feature-full version,
    # and possibly an out-of-date version from ROM, so load a more
    # complete version with native drivers
    # Allow both legacy BIOS and EFI architectures
    if option arch = 00:06 {
        filename "ipxe-x86.efi";
    } elsif option arch = 00:07 {
        filename "ipxe-x64.efi";
    } elsif option arch = 00:00 {
        filename "ipxe.pxe";
    }
}
elsif exists user-class and option user-class = "gPXE" {
    # If someone has an old version of gPXE burned into their ROM,
    # load a more recent iPXE
    filename "ipxe.pxe";
}
elsif option arch = 00:06 {
    # EFI 32-bit
    # I like to use iPXE-provided drivers, so therefore give ipxe.efi
    # to all non-iPXE clients, use snponly.efi if you have unsupported
    # or misbehaving NICs
    filename "ipxe-x86.efi";
    #filename "snponly-x86.efi";
}
elsif option arch = 00:07 {
    # EFI 64-bit
    # I like to use iPXE-provided drivers, so therefore give ipxe.efi
    # to all non-iPXE clients, use snponly.efi if you have unsupported
    # or misbehaving NICs
    filename "ipxe-x64.efi";
    #filename "snponly-x64.efi";
}
elsif option arch = 00:00 {
    # Legacy BIOS x86 mode
    # I like to use iPXE-provided drivers, so therefore give ipxe.pxe
    # to all non-iPXE clients, use undionly.kpxe if you have unsupported
    # or misbehaving NICs
    filename "ipxe.pxe";
    #filename "undionly.kpxe";
}
else {
    # Unsupported client architecture type, so do nothing
}
