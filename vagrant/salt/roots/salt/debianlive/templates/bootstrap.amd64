# config/bootstrap - options for live-build(7), bootstrap stage
<% livebuild = pillar['livebuild'] %>
# $LB_ARCHITECTURES: select chroot architectures
# (Default: autodetected)
LB_ARCHITECTURES="${livebuild['architectures_amd64']}"

# $LB_DISTRIBUTION: select distribution to use
# (Default: wheezy)
LB_DISTRIBUTION="${livebuild['distribution']}"

# $LB_PARENT_DISTRIBUTION: select parent distribution to use
# (Default: wheezy)
LB_PARENT_DISTRIBUTION="${livebuild['parent_distribution']}"

# $LB_PARENT_DEBIAN_INSTALLER_DISTRIBUTION: select parent distribution for debian-installer to use
# (Default: wheezy)
LB_PARENT_DEBIAN_INSTALLER_DISTRIBUTION="${livebuild['parent_distribution']}"

# key for localhost debrepos
_KEY="${livebuild['apt_key']}"


# $LB_PARENT_MIRROR_BOOTSTRAP: set parent mirror to bootstrap from
# (Default: http://ftp.debian.org/debian/)
LB_PARENT_MIRROR_BOOTSTRAP="${livebuild['local_mirror']}"

# $LB_PARENT_MIRROR_CHROOT: set parent mirror to fetch packages from
# (Default: http://ftp.debian.org/debian/)
LB_PARENT_MIRROR_CHROOT="${livebuild['local_mirror']}"

# $LB_PARENT_MIRROR_CHROOT_SECURITY: set security parent mirror to fetch packages from
# (Default: http://security.debian.org/)
LB_PARENT_MIRROR_CHROOT_SECURITY="${livebuild['local_security_mirror']}"

# $LB_PARENT_MIRROR_CHROOT_UPDATES: set updates parent mirror to fetch packages from
# (Default: http://ftp.debian.org/debian/)
LB_PARENT_MIRROR_CHROOT_UPDATES=""

# $LB_PARENT_MIRROR_CHROOT_BACKPORTS: set backports parent mirror to fetch packages from
# (Default: http://ftp.debian.org/debian/)
LB_PARENT_MIRROR_CHROOT_BACKPORTS=""

# $LB_PARENT_MIRROR_BINARY: set parent mirror which ends up in the image
# (Default: http://http.debian.net/debian/)
LB_PARENT_MIRROR_BINARY="${livebuild['lan_mirror']}"

# $LB_PARENT_MIRROR_BINARY_SECURITY: set security parent mirror which ends up in the image
# (Default: http://security.debian.org/)
LB_PARENT_MIRROR_BINARY_SECURITY="${livebuild['lan_security_mirror']}"

# $LB_PARENT_MIRROR_BINARY_UPDATES: set updates parent mirror which ends up in the image
# (Default: http://http.debian.net/debian/)
LB_PARENT_MIRROR_BINARY_UPDATES=""

# $LB_PARENT_MIRROR_BINARY_BACKPORTS: set backports parent mirror which ends up in the image
# (Default: http://http.debian.net/debian/)
LB_PARENT_MIRROR_BINARY_BACKPORTS=""

# $LB_PARENT_MIRROR_DEBIAN_INSTALLER: set debian-installer parent mirror
# (Default: http://ftp.debian.org/debian/)
LB_PARENT_MIRROR_DEBIAN_INSTALLER="http://ftp.us.debian.org/debian/"

# $LB_MIRROR_BOOTSTRAP: set mirror to bootstrap from
# (Default: http://ftp.debian.org/debian/)
LB_MIRROR_BOOTSTRAP="${livebuild['local_mirror']}"

# $LB_MIRROR_CHROOT: set mirror to fetch packages from
# (Default: http://ftp.debian.org/debian/)
LB_MIRROR_CHROOT="${livebuild['local_mirror']}"

# $LB_MIRROR_CHROOT_SECURITY: set security mirror to fetch packages from
# (Default: http://security.debian.org/)
LB_MIRROR_CHROOT_SECURITY="${livebuild['local_security_mirror']}"

# $LB_MIRROR_CHROOT_UPDATES: set updates mirror to fetch packages from
# (Default: http://ftp.debian.org/debian/)
LB_MIRROR_CHROOT_UPDATES=""

# $LB_MIRROR_CHROOT_BACKPORTS: set backports mirror to fetch packages from
# (Default: http://ftp.debian.org/debian/)
LB_MIRROR_CHROOT_BACKPORTS=""

# $LB_MIRROR_BINARY: set mirror which ends up in the image
# (Default: http://http.debian.net/debian/)
LB_MIRROR_BINARY="${livebuild['lan_mirror']}"

# $LB_MIRROR_BINARY_SECURITY: set security mirror which ends up in the image
# (Default: http://security.debian.org/)
LB_MIRROR_BINARY_SECURITY="${livebuild['lan_security_mirror']}"

# $LB_MIRROR_BINARY_UPDATES: set updates mirror which ends up in the image
# (Default: http://http.debian.net/debian/)
LB_MIRROR_BINARY_UPDATES=""

# $LB_MIRROR_BINARY_BACKPORTS: set backports mirror which ends up in the image
# (Default: http://http.debian.net/debian/)
LB_MIRROR_BINARY_BACKPORTS=""

# $LB_MIRROR_DEBIAN_INSTALLER: set debian-installer mirror
# (Default: http://ftp.debian.org/debian/)
LB_MIRROR_DEBIAN_INSTALLER="http://ftp.us.debian.org/debian/"

# $LB_ARCHIVES: enable available third-party archives
# (Default: empty)
LB_ARCHIVES=""

# $LB_ARCHIVE_AREAS: select archive areas to use
# (Default: main)
LB_ARCHIVE_AREAS="main"

# $LB_PARENT_ARCHIVE_AREAS: select archive areas to use
# (Default: main)
LB_PARENT_ARCHIVE_AREAS="main"

# $LB_BOOTSTRAP_QEMU_ARCHITECTURES: architectures to use foreign bootstrap
# (Default: )
LB_BOOTSTRAP_QEMU_ARCHITECTURES=""

# $LB_BOOTSTRAP_QEMU_EXCLUDE: packages to exclude during foreign bootstrap
# (Default: )
LB_BOOTSTRAP_QEMU_EXCLUDE=""

# $LB_BOOTSTRAP_QEMU_STATIC: static qemu binary for foreign bootstrap
# (Default: )
LB_BOOTSTRAP_QEMU_STATIC=""
